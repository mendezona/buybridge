name: CI

on: [push, pull_request]

env:
  DATABASE_URL: "https://fake.com"
  POSTGRES_URL: "https://fake.com"
  POSTGRES_PRISMA_URL: "https://fake.com"
  POSTGRES_URL_NO_SSL: "https://fake.com"
  POSTGRES_URL_NON_POOLING: "https://fake.com"
  POSTGRES_USER: "default"
  POSTGRES_HOST: "host"
  POSTGRES_PASSWORD: "password"
  POSTGRES_DATABASE: "database"
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: "fakeKey"
  CLERK_SECRET_KEY: "fakeKey"
  DISCORD_DROPSHIPPING_SERVER_ID: "fakeID"
  BRIGHT_DATA_USERNAME: "username"
  BRIGHT_DATA_PASSWORD: "password"
  BRIGHT_DATA_COUNTRY: "country"
  ASIN_DATA_API_KEY: "fakeKey"
  ASIN_DATA_API_COUNTRY: "country"
  UPSTASH_REDIS_REST_URL: "https://fake.com"
  UPSTASH_REDIS_REST_TOKEN: "takeToken"
  NEXT_PUBLIC_POSTHOG_KEY: "fakeKey"
  NEXT_PUBLIC_POSTHOG_HOST: "https://fake.com"
  SENTRY_DSN: "https://fake.com"
  SENTRY_AUTH_TOKEN: "fakeToken"
  SENTRY_ORG: "organistaion"
  SENTRY_PROJECT: "project"
  KAUFLAND_SELLER_CLIENT_KEY: "fakeKey"
  KAUFLAND_SELLER_SECRET_KEY: "fakeKey"
  UPSTASH_QSTASH_URL: "https://fake.com"
  UPSTASH_QSTASH_TOKEN: "fakeToken"
  UPSTASH_QSTASH_CURRENT_SIGNING_KEY: "fakeKey"
  UPSTASH_QSTASH_NEXT_SIGNING_KEY: "fakeKey"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install
        working-directory: ./frontend

      - name: Typecheck
        run: npm run typecheck
        working-directory: ./frontend

      - name: Lint
        run: npm run lint
        working-directory: ./frontend

      - name: Print Environment Variable
        run: echo $MY_ENV_VAR
        working-directory: ./frontend
